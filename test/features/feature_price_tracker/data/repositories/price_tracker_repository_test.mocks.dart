// Mocks generated by Mockito 5.3.0 from annotations
// in first_source_test/test/features/feature_price_tracker/data/repositories/price_tracker_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:first_source_test/features/feature_price_tracker/data/data_source/price_api_provider.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:web_socket_channel/web_socket_channel.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWebSocketChannel_0 extends _i1.SmartFake
    implements _i2.WebSocketChannel {
  _FakeWebSocketChannel_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [PriceApiProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockPriceApiProvider extends _i1.Mock implements _i3.PriceApiProvider {
  MockPriceApiProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WebSocketChannel callAllSymbol() =>
      (super.noSuchMethod(Invocation.method(#callAllSymbol, []),
              returnValue: _FakeWebSocketChannel_0(
                  this, Invocation.method(#callAllSymbol, [])))
          as _i2.WebSocketChannel);
  @override
  _i2.WebSocketChannel callSymbolTicks(dynamic symbol) =>
      (super.noSuchMethod(Invocation.method(#callSymbolTicks, [symbol]),
              returnValue: _FakeWebSocketChannel_0(
                  this, Invocation.method(#callSymbolTicks, [symbol])))
          as _i2.WebSocketChannel);
  @override
  _i2.WebSocketChannel callCancelTicks(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#callCancelTicks, [id]),
              returnValue: _FakeWebSocketChannel_0(
                  this, Invocation.method(#callCancelTicks, [id])))
          as _i2.WebSocketChannel);
}
